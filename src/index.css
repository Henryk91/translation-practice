.checkButtonEnabled {
  color: rgba(57, 143, 106);
}
.checkButtonDisabled {
  color: rgba(57, 143, 106, 0.3);
}
button:active {
  background-color: rgba(255, 226, 197, 0.5);
}
button:disabled {
  background-color: rgba(51, 51, 51, 0.3);
  color: rgba(57, 143, 106, 0.3);
  &:hover {
    background-color: #333;
    cursor: not-allowed;
  }
}

.translation-area {
  display: flex;
  width: 50%;
  flex-direction: column;
  font-size: 1.1em;
  background-color: rgba(20, 23, 34, 255);
  padding: 15px;
  border-radius: 10px;
  text-align: left;
}
@media (max-aspect-ratio: 10/10) and (max-width: 700px) {
  .translation-area {
    width: 90%;
    margin-left: 0px;
  }
}
.feedbackWrapper {
  width: -webkit-fill-available;
}

@property --progress {
  syntax: "<angle>";
  inherits: false;
  initial-value: 0deg;
}

/* timer-button.css */
.timer-btn {
  position: relative;
  width: var(--size, 100px);
  height: var(--size, 100px);
  border-radius: 50%;
  border: none;
  background: #3498db;
  color: #fff;
  font-size: 14px;
  cursor: pointer;
  isolation: isolate;
}

/* Allow smooth interpolation of hue */
@property --h {
  syntax: "<angle>";
  initial-value: 120deg; /* green */
  inherits: false;
}

.timer-btn::before {
  content: "";
  position: absolute;
  inset: calc(var(--ring, 4px) * -1);
  border-radius: 50%;
  padding: var(--ring, 4px);

  /* Arc color based on hue */
  background: conic-gradient(hsl(var(--h) 90% 45%) var(--progress, 0deg), transparent 0);

  -webkit-mask: radial-gradient(
    farthest-side,
    transparent calc(100% - var(--ring, 4px)),
    #000 calc(100% - calc(var(--ring, 4px) - 1px))
  );
  mask: radial-gradient(
    farthest-side,
    transparent calc(100% - var(--ring, 4px)),
    #000 calc(100% - calc(var(--ring, 4px) - 1px))
  );
  pointer-events: none;
  z-index: 1;
}

/* drive the timer via a custom property */
@keyframes timer {
  from {
    --progress: 0deg;
    --h: 120deg; /* green */
  }
  to {
    --progress: 360deg;
    --h: 0deg; /* red */
  }
}

.timer-btn.animate::before {
  animation: timer var(--duration) linear forwards;
}

.input-cell {
  padding: 5px 0 5px 0;
}

.gap-fill-input {
  margin: 5px 1px 5px 0;
  padding: 1px 8px;
  text-align: center;
  font-size: 1em;
}

.login-button {
  height: fit-content;
  left: 0px;
  font-size: 22px !important;
  min-width: 0 !important;
}

.menu-button {
  position: absolute;
  display: none;
  float: inline-end;
  float: none;
  cursor: pointer;
  margin: 20px;
  right: 0px;
  top: 15px;
  margin-left: -100px;
  font-size: 22px;
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}
@keyframes slideOut {
  from {
    display: flex;
    transform: translateX(0);
  }
  to {
    transform: translateX(-100%);
    display: none;
  }
}

.sidebar-menu-button {
  font-size: 22px;
}

@media (min-width: 600px) {
  .sidebar-menu-button {
    display: none;
  }
}
@media (max-width: 600px) {
  .menu-button {
    display: flex;
  }
}

@media (max-width: 600px) {
  #toggle:checked ~ .hidden-content {
    display: flex;
    animation: slideIn 0.5s ease-out forwards;
  }
  #toggle:not(:checked) ~ .hidden-content {
    /* display: flex; */
    animation: slideOut 0.5s ease-out forwards;
  }
}

.sidebar-menu {
  align-items: center;
  display: flex;
  flex-direction: row;
  width: -webkit-fill-available;
  justify-content: space-around;
}
